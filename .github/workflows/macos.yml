name: Build MacOS

on: 
  workflow_call:
    inputs:
      project_path:
        required: true
        type: string
      xcodeproj_path:
        required: true
        type: string
      project_target:
        required: true
        type: string
      plist_path:
        required: false
        type: string
      version:
        required: true
        type: string
      artifact:
        required: false
        type: boolean
      generate_appstore:
        required: false
        type: boolean
      generate_developer_id:
        required: false
        type: boolean
      generate_dmg:
        required: false
        type: boolean
      generate_pkg:
        required: false
        type: boolean
      macos_vm:
        description: 'The macos machine to runs-on'
        default: 'macos-13' # Ventura w/ xCode 15.0.1
        required: false
        type: string

jobs:
  build:
    name: Build MacOS
    runs-on: ${{ inputs.macos_vm }}
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
          lfs: true
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Increment MAC_BUILD_NUMBER locally
        id: versions
        env:
          BUILD_NUMBER: ${{ vars.MAC_BUILD_NUMBER }}
        run: |
          echo "build_number=$(($BUILD_NUMBER+1))" >> $GITHUB_OUTPUT
          echo "BUILD_NUMBER=$(($BUILD_NUMBER+1))" >> $GITHUB_ENV
      - run: echo "BUILD_NUMBER is now $BUILD_NUMBER"

      - name: Increment Version
        uses: starburst997/increment@v2
        with:
          name: 'MAC_BUILD_NUMBER'
          amount: 1
          token: ${{ secrets.GH_PAT }}

      - name: Run fastlane
        env:
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          MAC_BUILD_PATH: ${{ format('{0}/{1}', github.workspace, inputs.project_path) }}
          MAC_BUNDLE_ID: ${{ secrets.MAC_BUNDLE_ID }}

          ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD: false
          
          PROJECT_TARGET: ${{ inputs.project_target }}
          XCODEPROJ_PATH: ${{ inputs.xcodeproj_path }}
          PLIST_PATH: ${{ inputs.plist_path }}
          VERSION: "${{ inputs.version }}"
          BUILD_PATH: build

          GENERATE_APPSTORE: ${{ inputs.generate_appstore }}
          GENERATE_DEVELOPER_ID: ${{ inputs.generate_developer_id }}
          GENERATE_PKG: ${{ inputs.generate_pkg }}
        shell: bash
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${MATCH_DEPLOY_KEY}"
          bundle install
          [[ $GENERATE_APPSTORE == true ]] && bundle exec fastlane mac beta
          [[ $GENERATE_DEVELOPER_ID == true ]] && bundle exec fastlane mac developer_id
          [[ $GENERATE_PKG == true ]] && bundle exec fastlane mac pkg
          echo "Finshed!"

      - name: Create DMG
        if: ${{ inputs.generate_developer_id && inputs.generate_dmg }}
        shell: bash
        run: |
          echo LOL

      - uses: actions/upload-artifact@v4
        if: ${{ inputs.artifact }}
        with:
          name: build-macos
          path: build